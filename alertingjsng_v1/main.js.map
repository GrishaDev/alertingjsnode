{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/home.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/serverdialog/serverdialog.component.css","webpack:///./src/app/serverdialog/serverdialog.component.html","webpack:///./src/app/serverdialog/serverdialog.component.ts","webpack:///./src/app/servers/servers.component.css","webpack:///./src/app/servers/servers.component.html","webpack:///./src/app/servers/servers.component.ts","webpack:///./src/app/servers/servers.service.ts","webpack:///./src/app/settingdialog/settingdialog.component.css","webpack:///./src/app/settingdialog/settingdialog.component.html","webpack:///./src/app/settingdialog/settingdialog.component.ts","webpack:///./src/app/settings.service.ts","webpack:///./src/app/settings/settings.component.css","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/testingarea/testingarea.component.css","webpack:///./src/app/testingarea/testingarea.component.html","webpack:///./src/app/testingarea/testingarea.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n.title\\r\\n{\\r\\n    position: relative;\\r\\n    color: darkgreen;\\r\\n    font-size: 3em;\\r\\n    text-align: center;\\r\\n}\\r\\n.all\\r\\n{\\r\\n    position: absolute;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n}\\r\\n.example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n.example-card{\\r\\n      margin-top: 4px;\\r\\n  }\\r\\n.example-header-image { \\r\\n    background-size: cover;\\r\\n  }\\r\\n.title{\\r\\n      font-weight: bold;\\r\\n  }\\r\\n.img-article{\\r\\n      position: relative;\\r\\n      height: 350px;\\r\\n      width: 50%;\\r\\n      left: 25%;\\r\\n  }\\r\\n.action-buttons{\\r\\n      text-align: center;\\r\\n  }\\r\\n.example-container {\\r\\n      /* position: relative; */\\r\\n      width: 100%;\\r\\n      height: 100%;\\r\\n      border: 1px solid rgba(111, 111, 111, 0.50);\\r\\n  }\\r\\n.example-sidenav-content {\\r\\n      display: flex;\\r\\n      height: 75%;\\r\\n      align-items: center;\\r\\n      justify-content: center;\\r\\n  }\\r\\n.example-sidenav {\\r\\n      padding: 20px;\\r\\n  }\\r\\n.source-name {\\r\\n      margin-left:5px; \\r\\n  }\\r\\n.list-item:hover{\\r\\n      cursor: pointer;\\r\\n      background-color: #3f51b5;\\r\\n      color: white;\\r\\n  }\\r\\n  \"","module.exports = \"\\n<router-outlet></router-outlet>\\n<!-- [class.dark-theme]=\\\"status\\\" -->\\n\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { SettingsService } from './settings.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent \n{\n  title= 'alertingjsng';\n  statuscolor = 'darkgreen';\n  statustr = 'running'\n  mArticles:Array<any>;\n  mSources:Array<any>;\n  options:Array<any>;\n\n  status:boolean = true;\n  content:number = 0;\n\n  constructor(private newsapi:SettingsService)\n  {\n    console.log('app component constructor called');\n  }\n\n  ngOnInit() \n  {\n    this.options = ['Settings','Servers'];     \n  }\n\n  changeStatus()\n  {\n    if(this.status)\n    {\n      this.status = false;\n      this.statuscolor = 'red';\n      this.statustr = 'down'\n    }\n    else\n    {\n      this.status = true;\n      this.statuscolor = 'darkgreen';\n      this.statustr = 'running'\n    }\n  }\n\n  navPress(option)\n  {\n    if(option == \"Settings\")\n    {\n      this.content = 0;\n    }\n    else if(option == \"Servers\")\n    {\n      this.content = 1;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SettingsService } from './settings.service';\nimport { ServersService } from './servers/servers.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatCardModule, MatMenuModule, MatToolbarModule, MatIconModule, MatSidenavModule, MatListModule,MatTableModule,MatDialogModule,MatFormFieldModule,\nMatInputModule,MatPaginatorModule,MatOptionModule,MatSelectModule,MatProgressSpinnerModule,MatTabsModule} from '@angular/material';\nimport { FormsModule } from '@angular/forms';\nimport {Routes,RouterModule, Router} from '@angular/router'\n\nimport { AppComponent } from './app.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { ServersComponent } from './servers/servers.component';\n// import { Field } from './servers/servers.component';\nimport { ServerdialogComponent } from './serverdialog/serverdialog.component';\nimport { SettingdialogComponent } from './settingdialog/settingdialog.component';\nimport { LoginComponent } from './login/login.component';\nimport { MainComponent } from './main/main.component';\n\nimport { OverlayModule} from '@angular/cdk/overlay';\nimport { TestingareaComponent } from './testingarea/testingarea.component';\nimport { HomeComponent } from './home/home.component';\n\nconst appRoutes: Routes =\n[\n  {path: '',component:LoginComponent},\n  {path: 'main',component:MainComponent},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SettingsComponent,\n    ServersComponent,\n    ServerdialogComponent,\n    SettingdialogComponent,\n    LoginComponent,\n    MainComponent,\n    TestingareaComponent,\n    HomeComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatTableModule,\n    MatListModule,\n    MatDialogModule, \n    MatFormFieldModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatTabsModule,\n    OverlayModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  entryComponents: [\n    ServerdialogComponent,\n    SettingdialogComponent\n  ],\n  providers: [SettingsService,ServersService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".all\\r\\n{\\r\\n    /* position: absolute; */\\r\\n    overflow-y: hidden;\\r\\n    height: auto;\\r\\n}\\r\\n.title\\r\\n{\\r\\n    position: relative;\\r\\n    /* color: darkgreen; */\\r\\n    font-size: 2em;\\r\\n    text-align: center;\\r\\n}\\r\\n.subtitle\\r\\n{\\r\\n    position: relative;\\r\\n    /* color: darkgreen; */\\r\\n    font-size: 1em;\\r\\n    text-align: center;\\r\\n    /* text-overflow: ellipsis; */\\r\\n    /* max-width: 20%; */\\r\\n}\\r\\n.text-danger\\r\\n{\\r\\n    color:red;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.middle\\r\\n{\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<div class=\\\"all\\\">\\n\\n    <p class=\\\"title\\\"> Welcome </p>\\n\\n    <p class=\\\"subtitle\\\">Alerting service will show you all the needed servers and their metrics, configure who will recieve mails on critical metrics and configure many other variables of the service.</p>\\n    <p class=\\\"subtitle\\\">This is early buggy alpha, its probably usable but expect alot of bugs.</p>\\n    <!-- <mat-divider></mat-divider> -->\\n    <br>\\n    <p class=\\\"subtitle\\\"> The service is running for {{hours}} hours and {{minutes}} minutes.</p>\\n    <p class=\\\"subtitle\\\"> {{mails}} mails were sent.</p>\\n    <p class=\\\"text-danger middle\\\" *ngIf=\\\"errormsg\\\">{{errormsg}}</p>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HomeService } from './home.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private homeapi:HomeService) { }\n\n  mails:number = 0;\n  hours:number = 0;\n  minutes:number = 0;\n  errormsg:string =\"\";\n\n  ngOnInit() {\n\n    this.homeapi.getCount().subscribe((data:any) =>\n    {\n      console.log(data);\n      // var x:number = (data.minutes)/60\n      // this.hours = Number(x.toFixed(2));\n      var datka:number = data.minutes;\n      this.hours = Math.floor(datka/60);\n      datka = datka - (this.hours * 60);\n      this.minutes = datka;\n    },\n    (err) => {console.log(\"Error contacting home service, server down? details: \"+JSON.stringify(err));\n    this.errormsg=\"Error getting data from database, try again soon.\"});\n\n    this.homeapi.getMails().subscribe((data:any) =>\n    {\n      console.log(data);\n      this.mails = data.mails\n    },\n    (err) => {console.log(\"Error contacting home service, server down? details: \"+JSON.stringify(err));\n    this.errormsg=\"Error getting data from database, try again soon.\"});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient  } from '@angular/common/http';\n\nconst host = ''\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  constructor(private http:HttpClient) { }\n  \n  getCount()\n  {\n   return this.http.get(host+'/api/count');\n  }\n  getMails()\n  {\n    return this.http.get(host+'/api/mails');\n  }\n}\n","module.exports = \"/* .cssmagic\\r\\n{\\r\\n     position: absolute;\\r\\n} */\\r\\n/* .example-card {\\r\\n    position: absolute;\\r\\n    left: 45%;\\r\\n    top: 35%;\\r\\n  } */\\r\\n.mycontainer {\\r\\n    position: absolute;\\r\\n    background-color: white;\\r\\n    width: 50%;\\r\\n    height: 35%;\\r\\n    left: 25%;\\r\\n    top: 25%;\\r\\n    min-height: 700px;\\r\\n    box-shadow: 0 2px 2px rgba(0,0,0,.24), 0 0 2px rgba(0,0,0,.12);\\r\\n    text-align: center;\\r\\n  }\\r\\n.myform\\r\\n  {\\r\\n    /* display:block;\\r\\n    position: absolute;\\r\\n    left: 25%;\\r\\n    text-align: center; */\\r\\n    padding-top: 5%;\\r\\n    width: 50%;\\r\\n    height: 100%;\\r\\n    margin: 0 auto;\\r\\n    position: relative;\\r\\n  }\\r\\n.field\\r\\n  {\\r\\n    width: 100%;\\r\\n    margin-top: 5%;\\r\\n  }\\r\\n.btn\\r\\n  {\\r\\n    position: relative;\\r\\n    bottom: 0;\\r\\n    display: block;\\r\\n    /* margin: 0 auto; */\\r\\n    width: 25%;\\r\\n    height: 10%;\\r\\n  }\\r\\n.example-header-image {\\r\\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\r\\n    background-size: cover;\\r\\n  }\\r\\n.example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n.example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n.loginbox\\r\\n  {\\r\\n    display: flex;\\r\\n    position: absolute;\\r\\n    background-color: white;\\r\\n    width: 50%;\\r\\n    height: 45%;\\r\\n    left: 25%;\\r\\n    top: 20%;\\r\\n    min-height: 400px;\\r\\n    box-shadow: 0 2px 2px rgba(0,0,0,.24), 0 0 2px rgba(0,0,0,.12);\\r\\n    text-align: center;\\r\\n  }\\r\\n.err\\r\\n  {\\r\\n    color: red;\\r\\n  }\\r\\n.btn[disabled]\\r\\n  {\\r\\n    cursor: not-allowed;\\r\\n    background-color: lightgray;\\r\\n  }\\r\\n.aboveform\\r\\n  {\\r\\n    display: inline-block;\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    /* background-color: red; */\\r\\n    font-size: 2em;\\r\\n  }\\r\\n.avatar\\r\\n  {\\r\\n    position: absolute;\\r\\n    /* width: 5%; */\\r\\n    height: 100%;\\r\\n    left: 0;\\r\\n    display: inline-block;\\r\\n    /* margin: 0 auto; */\\r\\n  }\\r\\n.logo\\r\\n  {\\r\\n    height: 50%;\\r\\n    display: block;\\r\\n    margin: 0 auto;\\r\\n    padding-right: 20px;\\r\\n  }\\r\\n.title\\r\\n{\\r\\n  display: inline-block;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\"","module.exports = \"<!-- <div class=\\\"cssmagic\\\">\\n  <mat-card class=\\\"example-card\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n        <mat-card-title>Shiba Inu</mat-card-title>\\n        <mat-card-subtitle>Dog Breed</mat-card-subtitle>\\n      </mat-card-header>\\n      <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n      <mat-card-content>\\n        <p>\\n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\\n          bred for hunting.\\n        </p>\\n      </mat-card-content>\\n      <mat-card-actions>\\n        <button mat-button>LIKE</button>\\n        <button mat-button>SHARE</button>\\n      </mat-card-actions>\\n    </mat-card>\\n</div> -->\\n\\n<!-- <div class=\\\"cssmagic\\\">\\n  <div class=\\\"example-container\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Input\\\">\\n      </mat-form-field>\\n    \\n      <mat-form-field>\\n        <textarea matInput placeholder=\\\"Textarea\\\"></textarea>\\n      </mat-form-field>\\n    \\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Select\\\">\\n          <mat-option value=\\\"option\\\">Option</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n  </div>\\n</div> -->\\n\\n<!-- <div class=\\\"cssmagic\\\">\\n<mat-card class=\\\"example-card\\\">\\n    <mat-card-header>\\n      <mat-card-title>Login</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n        <form class=\\\"example-form\\\">\\n            <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n              <tr>\\n                <td>\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                  <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required>\\n                  </mat-form-field>\\n                </td>\\n              </tr>\\n              <tr>\\n              <td><mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\"type=\\\"password\\\" name=\\\"password\\\" required>\\n              </mat-form-field></td>\\n            </tr></table>\\n          </form>\\n      <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</div> -->\\n\\n<!-- <div class=\\\"mycontainer\\\">\\n  <form class=\\\"myform\\\">\\n      <table class=\\\"field\\\" cellspacing=\\\"0\\\">\\n        <tr>\\n          <td>\\n            <mat-form-field class=\\\"field\\\">\\n            <input matInput placeholder=\\\"Username\\\" class=\\\"field\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n        <td><mat-form-field class=\\\"field\\\">\\n          <input matInput placeholder=\\\"Password\\\" class=\\\"field\\\" [(ngModel)]=\\\"password\\\"type=\\\"password\\\" name=\\\"password\\\" required>\\n        </mat-form-field></td>\\n      </tr></table>\\n      <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\" class=\\\"btn\\\">Login</button>\\n      <p>Message</p>\\n    </form>\\n</div> -->\\n\\n<div class=\\\"loginbox\\\">\\n    <div class=\\\"aboveform\\\">\\n      <img src=\\\"../../assets/images/alertpng.png\\\" class=\\\"avatar\\\">\\n      <p class=\\\"title\\\">Hello</p>\\n    </div>\\n    <form class=\\\"myform\\\" #f=\\\"ngForm\\\">\\n        <table class=\\\"field\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"field\\\">\\n              <input matInput placeholder=\\\"Username\\\" id=\\\"user\\\" class=\\\"field\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" (input)=\\\"inputChanged($event)\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n          <tr>\\n          <td><mat-form-field class=\\\"field\\\">\\n            <input matInput placeholder=\\\"Password\\\" id=\\\"pass\\\" class=\\\"field\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" (input)=\\\"inputChanged($event)\\\" required>\\n          </mat-form-field></td>\\n        </tr></table>\\n        <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\" class=\\\"btn\\\" [disabled]=\\\"!f.valid\\\">Login</button>\\n        <p class=\\\"err\\\" *ngIf=\\\"err\\\">{{err}}</p>\\n        <!-- [@slideInOut]=\\\"err\\\" -->\\n      </form>\\n  </div>\"","import { Component, OnInit,ViewChild } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material'\nimport { HttpClient  } from '@angular/common/http';\nimport { NgForm } from '@angular/forms'\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { LoginService } from './login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  animations: [\n    trigger('slideInOut', [\n      transition(':enter', [\n        style({transform: 'translateY(-5000%)'}),\n        animate('300ms ease-in', style({transform: 'translateY(0%)'}))\n      ]),\n      transition(':leave', [\n      animate('300ms ease-in', style({transform: 'translateY(0%)'}))\n      ])\n    ])\n  ]\n})\nexport class LoginComponent implements OnInit \n{\n  @ViewChild('f') form:NgForm;\n  constructor(private router: Router,private http:HttpClient,private loginservice:LoginService) { }\n  username: string;\n  password: string;\n  valid:boolean = false;\n  err:string;\n\n    ngOnInit() {\n      console.log(this.valid)\n    }\n    login() : void \n    {\n      // if(this.username == 'admin' && this.password == 'admin'){\n      // this.router.navigate([\"main\"]);\n      // }else {\n      //   alert(\"Invalid credentials\");\n      // }\n\n      let it = this;\n\n      const req = this.http.post('http://localhost:3000/api/loginsubmit', {\n        \"user\": this.username,\n        \"pass\": this.password\n      })\n      .subscribe(\n        function(res:any)\n        {\n          console.log(res);\n  \n         // var user = JSON.parse(res.user);\n          if(res.auth)\n          {\n            //alert(\"Connecting..\");\n            it.router.navigate([\"main\"]);\n          }\n          else\n          {\n            //alert(\"Invalid credentials\");\n            it.err = \"Invalid credentials\";\n          }\n        },\n        err => {\n          console.log(\"Error occured+ :: \"+err);\n          it.err = \"Error connecting\";\n        }\n      );\n    }\n\n    inputChanged($event)\n    {\n      this.err=\"\";\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient  } from '@angular/common/http';\n\nconst host = ''\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http:HttpClient) { }\n\n  postsmails(data)\n  {\n    return this.http.post(host+'/api/login',data);\n  }\n}\n","module.exports = \":host{\\r\\n    box-sizing: border-box;\\r\\n    display: block;\\r\\n    height: 100%;\\r\\n  }\\r\\n\\r\\n.title\\r\\n{\\r\\n    position: relative;\\r\\n    /* color: darkgreen; */\\r\\n    font-size: 3em;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.all\\r\\n{\\r\\n    position: absolute;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n/* .maxheight\\r\\n{\\r\\n    height: 800px !important;\\r\\n} */\\r\\n\\r\\n#wrapper{\\r\\n    min-height: 100%; \\r\\n    height: 100%; \\r\\n    box-sizing: border-box;/*new*/\\r\\n  }\\r\\n\\r\\n/* .tab\\r\\n{\\r\\n    overflow: hidden;\\r\\n} */\\r\\n\\r\\n#tab-group{\\r\\n    height:90%;\\r\\n    /* overflow: hidden; */\\r\\n  }\\r\\n\\r\\n#tab-group mat-tab-body {\\r\\n    flex-grow: 1;\\r\\n  }\\r\\n\\r\\n.example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n\\r\\n/* .example-card{\\r\\n      margin-top: 4px;\\r\\n  } */\\r\\n\\r\\n.example-header-image { \\r\\n    background-size: cover;\\r\\n  }\\r\\n\\r\\n.title{\\r\\n      font-weight: bold;\\r\\n  }\\r\\n\\r\\n.img-article{\\r\\n      position: relative;\\r\\n      height: 350px;\\r\\n      width: 50%;\\r\\n      left: 25%;\\r\\n  }\\r\\n\\r\\n.action-buttons{\\r\\n      text-align: center;\\r\\n  }\\r\\n\\r\\n.example-container {\\r\\n      /* position: relative; */\\r\\n      width: 100%;\\r\\n      height: 100%;\\r\\n      /* border: 1px solid rgba(111, 111, 111, 0.50); */\\r\\n  }\\r\\n\\r\\n.example-sidenav-content {\\r\\n      display: flex;\\r\\n      height: 75%;\\r\\n      align-items: center;\\r\\n      justify-content: center;\\r\\n  }\\r\\n\\r\\n.example-sidenav {\\r\\n      padding: 20px;\\r\\n  }\\r\\n\\r\\n.source-name {\\r\\n      margin-left:15%; \\r\\n      font-size: 2em;\\r\\n  }\\r\\n\\r\\n.list-item\\r\\n  {\\r\\n      margin-bottom: 4%;\\r\\n  }\\r\\n\\r\\n.list-item:hover{\\r\\n      cursor: pointer;\\r\\n      background-color: #3f51b5;\\r\\n      color: white;\\r\\n  }\\r\\n\\r\\n.avatar\\r\\n  {\\r\\n      width: 30%;\\r\\n      height: 30%;\\r\\n      display: block;\\r\\n      margin: 0 auto;\\r\\n      padding-bottom: 10%;\\r\\n  }\\r\\n\\r\\n.logo\\r\\n  {\\r\\n    height: 50%;\\r\\n    display: block;\\r\\n    margin: 0 auto;\\r\\n    padding-right: 20px;\\r\\n  }\"","module.exports = \"<!-- class all on this div -->\\n<div id=\\\"wrapper\\\">\\n  <mat-menu #appMenu=\\\"matMenu\\\">\\n      <button mat-menu-item (click)=\\\"toggleTheme()\\\"> Switch theme </button>\\n      <button mat-menu-item (click)=\\\"help()\\\"> Help </button>\\n      <!-- <button mat-menu-item (click)=\\\"changeStatus()\\\"> Change status </button> -->\\n      <button mat-menu-item (click)=\\\"logout()\\\"> Logout </button>\\n    </mat-menu>\\n    \\n    \\n   <mat-sidenav-container class=\\\"example-container\\\" >\\n      <mat-toolbar color=\\\"primary\\\">\\n        <!-- <button mat-button (click)=\\\"sidenav.open()\\\" ><mat-icon>menu</mat-icon></button> -->\\n        <img src=\\\"../../assets/images/alertpng.png\\\" class=\\\"logo\\\">\\n        <span>Alerting Service</span>  \\n        <span class=\\\"example-spacer\\\"></span>\\n        <p> buggy alpha</p>\\n        <button mat-button [matMenuTriggerFor]=\\\"appMenu\\\"><mat-icon>settings</mat-icon></button>\\n      </mat-toolbar>\\n\\n      <mat-tab-group id=\\\"tab-group\\\">\\n          <mat-tab label=\\\"Home\\\" class=\\\"tab\\\">\\n            <app-home></app-home>\\n          </mat-tab>\\n          <mat-tab label=\\\"Settings\\\" [disabled]=\\\"disabled\\\">\\n            <app-settings></app-settings>\\n          </mat-tab>\\n          <mat-tab label=\\\"Servers\\\">\\n            <app-servers></app-servers>\\n          </mat-tab>\\n          <!-- <mat-tab label=\\\"Testing area\\\">\\n            <app-testingarea></app-testingarea>\\n          </mat-tab> -->\\n      </mat-tab-group>\\n\\n      <mat-sidenav #sidenav class=\\\"example-sidenav\\\">\\n        <mat-list class=\\\"list-nav\\\">\\n            <img src=\\\"../../assets/images/alertpng.png\\\" class=\\\"avatar\\\">\\n            <mat-divider style=\\\"padding-top: 10%\\\"></mat-divider>\\n            <mat-list-item class=\\\"list-item\\\" *ngFor=\\\"let source of options\\\" (click)=\\\"navPress(source[0]);sidenav.close();\\\">\\n              <mat-icon>{{source[1]}}</mat-icon>\\n              <span class=\\\"source-name\\\"> {{source[0]}}</span>\\n            </mat-list-item>\\n        </mat-list>\\n      </mat-sidenav>\\n        <!-- <p class=\\\"title\\\" color=\\\"primary\\\"> service is {{ statustr }} </p> -->\\n        <!-- <app-settings *ngIf=\\\"content==0\\\"></app-settings>\\n        <app-servers *ngIf=\\\"content==1\\\"></app-servers>\\n        <app-testingarea *ngIf=\\\"content==2\\\"></app-testingarea> -->\\n    </mat-sidenav-container>\\n</div>\"","import { Component, OnInit,HostBinding } from '@angular/core';\nimport { HttpClient  } from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport { OverlayContainer} from '@angular/cdk/overlay';\n\nconst dark = 'dark-theme';\nconst light = 'default-theme';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit \n{\n  host = ''\n  title= 'alertingjsng';\n  statuscolor = 'darkgreen';\n  statustr = 'running'\n  mArticles:Array<any>;\n  mSources:Array<any>;\n  options:Array<any>;\n\n  status:boolean = true;\n  content:number = 0;\n\n  darktheme:boolean = false;\n  \n  disabled:boolean = true;\n\n  constructor(private http:HttpClient,private router: Router, public overlayContainer: OverlayContainer)\n  {\n    console.log('app component constructor called');\n  }\n\n  @HostBinding('class') componentCssClass;\n\n  ngOnInit() \n  {\n    this.init();\n  }\n\n  init()\n  {\n    this.options = [['Settings','settings'],['Servers','important_devices'],['Testing area','brush']];  \n    \n    let savedtheme:string = localStorage.getItem(\"theme\");\n    if(savedtheme == dark)\n      this.toggleTheme();\n\n    this.http.get(this.host+'/api/auth').subscribe((data:any) =>\n    {\n      if(data.admin)\n        this.disabled = false;\n    });\n  }\n\n  changeStatus()\n  {\n    if(this.status)\n    {\n      this.status = false;\n      this.statuscolor = 'red';\n      this.statustr = 'down'\n    }\n    else\n    {\n      this.status = true;\n      this.statuscolor = 'darkgreen';\n      this.statustr = 'running'\n    }\n  }\n\n  navPress(option)\n  {\n    if(option == \"Settings\")\n    {\n      this.content = 0;\n    }\n    else if(option == \"Servers\")\n    {\n      this.content = 1;\n    }\n    else if(option == \"Testing area\")\n    {\n      this.content = 2;\n    }\n    console.log(this.content);\n  }\n\n  toggleTheme()\n  {\n    // let dark = 'dark-theme';\n    // let theme2 = 'light-theme';\n    // let light = 'default-theme';\n    \n    this.darktheme = !this.darktheme;\n\n    if(this.darktheme)\n    {\n      this.overlayContainer.getContainerElement().classList.add(dark);\n      this.overlayContainer.getContainerElement().classList.remove(light);\n      this.componentCssClass = dark;\n      localStorage.setItem(\"theme\", dark);\n    }\n    else\n    {\n      this.overlayContainer.getContainerElement().classList.add(light);\n      this.overlayContainer.getContainerElement().classList.remove(dark);\n      this.componentCssClass = light;\n      localStorage.setItem(\"theme\", light);\n    }\n  }\n\n  logout()\n  {\n    this.http.get(this.host+'/api/logout').subscribe((data:any) =>\n    {\n      if(data.logout)\n        this.router.navigate([\"\"]);\n    });\n\n  }\n\n  help()\n  {\n    alert(\"no help in early alpha\")\n  }\n}\n","module.exports = \".middle\\r\\n{\\r\\n    text-align: center; \\r\\n}\\r\\n.example-spacer {\\r\\n    flex: 1 0 auto;\\r\\n  }\\r\\n.bot\\r\\n{\\r\\n    position: relative;\\r\\n    margin-bottom: 0;\\r\\n    top: 1em;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    bottom: 0;\\r\\n}\\r\\n.field\\r\\n{\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<h1 mat-dialog-title class=\\\"middle\\\">Change mail recievers for {{data.server}}</h1>\\n<div mat-dialog-content class=\\\"middle\\\">\\n  \\n  <!-- <ul>\\n    <li>\\n      <span *ngIf=\\\"data.newmails === 'da'\\\">&#10003;</span> banana\\n    </li>\\n    <li>\\n      <span *ngIf=\\\"data.newmails === '324'\\\">&#10003;</span> da\\n    </li>\\n    <li>\\n      <span *ngIf=\\\"data.newmails === 'da'\\\">&#10003;</span> harta\\n    </li>\\n  </ul> -->\\n  <mat-form-field class=\\\"field\\\">\\n        <!-- <input matInput [(ngModel)]=\\\"data.mails\\\"> -->\\n        <textarea matInput placeholder=\\\"Type:\\\" [(ngModel)]=\\\"data.mails\\\">{{data.mails}}</textarea>\\n        <mat-hint align=\\\"start\\\"><strong>Include ' , ' between mails to make a list</strong> </mat-hint>\\n  </mat-form-field>\\n</div>\\n<div mat-dialog-actions class=\\\"bot\\\">\\n    <!-- <button mat-button (click)=\\\"onNoClick()\\\">nvm</button> -->\\n    <button mat-button mat-dialog-close>back</button>\\n    <span class=\\\"example-spacer\\\"></span>\\n    <button mat-button [mat-dialog-close]=\\\"data\\\">Ok</button>\\n</div>\"","import { Component,Inject } from '@angular/core';\nimport {MatDialog,MAT_DIALOG_DATA,MatDialogRef} from '@angular/material';\n\nexport interface DialogData {\n  server: string;\n  mails: string;\n  index:number;\n}\n\n@Component({\n  selector: 'app-serverdialog',\n  templateUrl: './serverdialog.component.html',\n  styleUrls: ['./serverdialog.component.css']\n})\n\nexport class ServerdialogComponent {\n  constructor(public dialogRef: MatDialogRef<ServerdialogComponent>,@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n//public dialogRef: MatDialogRef<Field>,@Inject(MAT_DIALOG_DATA) public data: DialogData","module.exports = \".all\\r\\n{\\r\\n    /* overflow-y: hidden; */\\r\\n    /* height: 100%;\\r\\n    width: 100%;\\r\\n    margin: 0; */\\r\\n}\\r\\n\\r\\ntable {\\r\\n    /* position: absolute; */\\r\\n    width: 100%;\\r\\n    /* left: 10%; */\\r\\n    /* max-height: 400px;\\r\\n    overflow-y: scroll; */\\r\\n  }\\r\\n\\r\\n.centered {\\r\\n    position: relative;\\r\\n    width: 80%;\\r\\n    left: 10%;\\r\\n  }\\r\\n\\r\\n.title\\r\\n{\\r\\n    position: relative;\\r\\n    /* color: darkgreen; */\\r\\n    font-size: 2em;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.middle\\r\\n{\\r\\n    text-align: center; \\r\\n}\\r\\n\\r\\n.example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n\\r\\n.pagtool\\r\\n{\\r\\n    /* background-color: white; */\\r\\n}\\r\\n\\r\\n.mid\\r\\n{\\r\\n    position: fixed;\\r\\n    z-index: 999;\\r\\n    height: 2em;\\r\\n    width: 2em;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n}\\r\\n\\r\\n.refreshbtn:hover\\r\\n{\\r\\n    color: lightblue;\\r\\n}\\r\\n\\r\\n.mailtd\\r\\n{\\r\\n    width: 60%;\\r\\n    max-width: 20em;\\r\\n    white-space: normal;\\r\\n    word-break: break-all;\\r\\n}\\r\\n\\r\\n.mailtd:hover\\r\\n{\\r\\n    cursor: pointer;\\r\\n      background-color: #3f51b5;\\r\\n      color: white;\\r\\n}\\r\\n\\r\\n.text-danger\\r\\n{\\r\\n    color:red;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.text-correct\\r\\n{\\r\\n    color:green;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n/* .refresh:hover\\r\\n{\\r\\n    cursor: pointer;\\r\\n    background-color: #3f51b5;\\r\\n} */\\r\\n\\r\\ntbody\\r\\n{\\r\\n    display: block;\\r\\n    height: 300px;\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\nthead, tbody tr {\\r\\n    display:table;\\r\\n    width:100%;\\r\\n    table-layout:fixed;/* even columns width , fix width of table too*/\\r\\n}\"","module.exports = \"<!-- [@slideInOut] -->\\n<div class=\\\"all\\\">\\n  <p class=\\\"title\\\" *ngIf=\\\"animation\\\"> Servers list: </p>\\n\\n  <div class=\\\"mat-elevation-z8 centered\\\" *ngIf=\\\"animation\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n        \\n        <ng-container matColumnDef=\\\"server\\\">\\n            <th mat-header-cell *matHeaderCellDef> Server </th>\\n            <td mat-cell *matCellDef=\\\"let server\\\"> {{server.server}} </td>\\n        </ng-container>\\n          \\n        <ng-container matColumnDef=\\\"cpu\\\">\\n          <th mat-header-cell *matHeaderCellDef> Cpu </th>\\n          <td mat-cell *matCellDef=\\\"let server\\\" [class.text-danger]=\\\"server.cpu > peak\\\"> {{server.cpu}}% </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"ram\\\">\\n          <th mat-header-cell *matHeaderCellDef> Ram </th>\\n          <td mat-cell *matCellDef=\\\"let server\\\" [class.text-danger]=\\\"server.ram > peak\\\" > {{server.ram}}% </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"overloaded\\\">\\n          <th mat-header-cell *matHeaderCellDef> Overloaded? </th>\\n            <td mat-cell *matCellDef=\\\"let server\\\" [class.text-danger]=\\\"server.overloaded\\\" \\n            [class.text-correct]=\\\"!server.overloaded\\\">\\n            <mat-icon *ngIf=\\\"!server.overloaded\\\">check</mat-icon>\\n            <mat-icon *ngIf=\\\"server.overloaded\\\">priority_high</mat-icon>\\n            {{server.overloaded}} </td>\\n        </ng-container>\\n        <!-- [ngStyle]=\\\"{'color:':server.overloaded === 'true' ? 'red' : 'green' }\\\" -->\\n        <ng-container matColumnDef=\\\"mail\\\">\\n          <th mat-header-cell *matHeaderCellDef> Mail receivers </th>\\n          <td mat-cell *matCellDef=\\\"let server; let i=index\\\" (click)=\\\"openDialog(server.server,server.mail,i)\\\" class=\\\"mailtd\\\"> {{server.mail}} </td>\\n        </ng-container>\\n\\n        <thead>\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        </thead>\\n        <tbody>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns; let i = index\\\"></tr>\\n        </tbody>\\n      </table>\\n      <mat-paginator [pageSizeOptions]=\\\"[10, 5, 3]\\\" showFirstLastButtons></mat-paginator>\\n      <!-- <mat-toolbar class=\\\"pagtool\\\" color=\\\"accent\\\"> -->\\n        <!-- <mat-toolbar-row> -->\\n        <!--   <mat-icon (click)=\\\"updateTable()\\\" title=\\\"refresh\\\">refresh</mat-icon>\\n            <span class=\\\"example-spacer\\\"></span>\\n          <mat-paginator [pageSizeOptions]=\\\"[10, 5, 3]\\\" showFirstLastButtons></mat-paginator>-->\\n        <!-- </mat-toolbar-row> -->\\n      <!-- </mat-toolbar> -->\\n      <button mat-icon-button style=\\\"position: absolute; bottom:10px; left:10px;\\\" color=\\\"primary\\\"><mat-icon (click)=\\\"updateTable()\\\" title=\\\"refresh\\\" class=\\\"refreshbtn\\\">refresh</mat-icon></button>\\n  </div>\\n  <p class=\\\"text-danger middle\\\" *ngIf=\\\"errormsg\\\">{{errormsg}}</p>\\n\\n  <mat-spinner class=\\\"mid\\\" color=\\\"warn\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n    <!-- <p *ngIf=\\\"newmails\\\">\\n        You chose: <i>{{newmails}}</i>\\n    </p> -->\\n</div>\"","import { Component, OnInit,Inject,ViewChild } from '@angular/core';\nimport {MatDialog,MAT_DIALOG_DATA,MatDialogRef,MatPaginator,MatTableDataSource} from '@angular/material';\nimport { ServerdialogComponent } from '../serverdialog/serverdialog.component';\nimport { ServersService } from './servers.service';\nimport { SettingsService } from '../settings.service';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\nexport interface DialogData {\n  mails: string;\n  index:number\n}\n\nexport interface Server {\n  id: number,\n  server: string;\n  cpu: number;\n  ram: number;\n  overloaded: boolean;\n  mail: string;\n}\n\n\nlet SERVER_DATA2: Server[] = [\n  {id: 0,server: 'harta', cpu: 92,ram:52,overloaded:true,mail:\"dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,\"+\n  \"dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com\"},\n  {id: 1,server: 'harta2', cpu: 22,ram:12,overloaded:false,mail:\"pringles@hey.com\"},\n  {id: 2,server: 'harta3', cpu: 62,ram:42,overloaded:false,mail:\"banan@outlook.com,jaja@bueno.nz\"},\n  {id: 3,server: 'harta324', cpu: 92,ram:52,overloaded:true,mail:\"dada@gmail.com,pringles@hey.com\"},\n  {id: 4,server: 'harta211', cpu: 22,ram:12,overloaded:false,mail:\"pringles@hey.com\"} ];\n\nlet SERVER_DATA: Server[] = [\n  {id: 0,server: 'harta', cpu: 92,ram:52,overloaded:true,mail:\"dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,\"+\n  \"dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com,dada@gmail.com,pringles@hey.com\"},\n  {id: 1,server: 'harta2', cpu: 22,ram:12,overloaded:false,mail:\"pringles@hey.com\"},\n  {id: 2,server: 'harta3', cpu: 62,ram:42,overloaded:false,mail:\"banan@outlook.com,jaja@bueno.nz\"},\n  {id: 3,server: 'harta324', cpu: 92,ram:52,overloaded:true,mail:\"dada@gmail.com,pringles@hey.com\"},\n  {id: 4,server: 'harta211', cpu: 22,ram:12,overloaded:false,mail:\"pringles@hey.com\"},\n  {id: 5,server: 'harta324', cpu: 62,ram:42,overloaded:false,mail:\"banan@outlook.com,jaja@bueno.nz\"},\n  {id: 6,server: 'harta342', cpu: 92,ram:52,overloaded:true,mail:\"dada@gmail.com,pringles@hey.com\"},\n  {id: 7,server: 'harta234', cpu: 22,ram:12,overloaded:false,mail:\"pringles@hey.com\"},\n  {id: 8,server: 'harta337', cpu: 62,ram:42,overloaded:false,mail:\"banan@outlook.com,jaja@bueno.nz\"},\n  {id: 9,server: 'harta', cpu: 92,ram:52,overloaded:true,mail:\"dada@gmail.com,pringles@hey.com\"},\n  {id: 10,server: 'harta777', cpu: 22,ram:12,overloaded:false,mail:\"pringles@hey.com\"},\n  {id: 11,server: 'harta3', cpu: 62,ram:42,overloaded:false,mail:\"banan@outlook.com,jaja@bueno.nz\"},\n  {id: 12,server: 'harta324', cpu: 92,ram:52,overloaded:true,mail:\"dada@gmail.com,pringles@hey.com\"},\n  {id: 13,server: 'harta555', cpu: 22,ram:12,overloaded:false,mail:\"pringles@hey.com\"},\n  {id: 14,server: 'harta322', cpu: 62,ram:42,overloaded:false,mail:\"banan@outlook.com,jaja@bueno.nz\"}\n];\n\n@Component({\n  selector: 'app-servers',\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css'],\n  animations: [\n    trigger('slideInOut', [\n      transition(':enter', [\n        style({transform: 'translateX(-100%)'}),\n        animate('500ms ease-in', style({transform: 'translateX(0%)'}))\n      ]),\n      transition(':leave', [\n      animate('500ms ease-in', style({transform: 'translateX(0%)'}))\n      ])\n    ])\n  ]\n})\nexport class ServersComponent implements OnInit \n{\n  displayedColumns: string[] = ['server', 'cpu','ram','overloaded','mail'];\n  dataSource;\n  loading:boolean = false;\n\n  first:boolean = true;\n  yea:boolean = true;\n  peak:number = 200;\n  errormsg:string = \"\";\n\n  animation = false;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public dialog: MatDialog,private serversapi:ServersService,private settingsapi:SettingsService) { }\n\n  ngOnInit() \n  {\n    this.animation = true;\n\n    this.dataSource  = new MatTableDataSource<Server>(SERVER_DATA);\n    setTimeout(() => this.dataSource.paginator = this.paginator);\n\n    setTimeout(function(){this.dataSource.paginator = this.paginator;},1000);\n    this.updateTable();\n    this.first=false;\n  }\n\n  updateTable()\n  {\n    if(!this.first)\n    this.loading = true;\n\n    this.serversapi.getServers().subscribe((data:any) =>\n    {\n      SERVER_DATA = data;\n      SERVER_DATA.sort(function(a, b) {\n        return a.id - b.id;\n      });\n      this.getPeakValue();\n      this.dataSource = new MatTableDataSource<Server>(SERVER_DATA);\n      this.dataSource.paginator = this.paginator;\n      this.errormsg= \"\";\n      console.log(\"got new server data\");\n      setTimeout(function() {this.loading=false;}.bind(this), 500);\n    },\n    (err) => {console.log(\"Error contacting servers service, server down? details: \"+JSON.stringify(err));\n    this.errormsg=\"Error getting data from database, try again soon.\";\n    this.loading=false;});\n  }\n  \n  getPeakValue()\n  {\n    this.settingsapi.getSettings().subscribe((data:any) =>\n    {\n      for(let i=0;i<data.length;i++)\n      {\n        if(data[i].name==\"peak\")\n        {\n          let str = data[i].value;\n          let cropped = str.slice(0,str.length-1)\n          this.peak = Number(cropped);\n          console.log(this.peak);\n        }\n      }\n    },\n    (err) => {console.log(\"Error contacting settings service, server down? details: \"+JSON.stringify(err));\n    this.errormsg=\"Error getting some data from database, but overall ok\"});\n  }\n\n  updateServers(data)\n  {\n    this.serversapi.postsmails(data).subscribe((res:any) =>\n    {\n        if(res.status)\n        {\n          // this.updateTable();\n          console.log(\"succesful servers update!\");\n        }\n        else\n        {\n          console.log(\"failed servers update.\");\n          this.errormsg=\"Error getting data from database, try again soon.\"\n        }\n    });\n  }\n\n  parsemaildata(data)\n  {\n    let maildata = [];\n\n    for(let i=0; i<data.length;i++)\n    {\n      maildata.push({server:data[i].server,mail:data[i].mail})\n    }\n    return maildata;\n  }\n\n  openDialog(server,mails,index): void \n  {\n    const dialogRef = this.dialog.open(ServerdialogComponent, \n    {\n      width: '450px',\n      data: {server:server,mails: mails,index:index}\n    });\n\n    dialogRef.afterClosed().subscribe(result => \n    {\n      console.log(result);\n      if(result)\n      {\n        SERVER_DATA[result.index].mail = result.mails;\n        this.updateServers({server:SERVER_DATA[result.index].server,mail:SERVER_DATA[result.index].mail});\n\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient  } from '@angular/common/http';\n\nconst host = ''\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServersService \n{\n  constructor(private http:HttpClient) { }\n\n  getServers()\n  {\n   return this.http.get(host+'/api/getservers');\n  }\n  postservers(data)\n  {\n    return this.http.post(host+'/api/postservers',data);\n  }\n  postsmails(data)\n  {\n    return this.http.post(host+'/api/postmails',data);\n  }\n}\n","module.exports = \".middle\\r\\n{\\r\\n    text-align: center; \\r\\n    /* background-color: lightblue; */\\r\\n}\\r\\n.example-spacer {\\r\\n    flex: 1 0 auto;\\r\\n  }\\r\\n.bot\\r\\n{\\r\\n    position: relative;\\r\\n    margin-bottom: 0;\\r\\n    top: 1em;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    bottom: 0;\\r\\n    /* background-color: red; */\\r\\n}\\r\\ntextarea\\r\\n{\\r\\n    /* overflow-y: hidden; */\\r\\n    /* overflow-y: scroll; */\\r\\n}\\r\\n/* ::-webkit-scrollbar { \\r\\n    display: none; \\r\\n} */\\r\\n.field\\r\\n{\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<h1 mat-dialog-title class=\\\"middle\\\">Change value of {{data.setting}}</h1>\\n<div mat-dialog-content class=\\\"middle\\\">\\n  <!-- type now -->\\n  <!-- <ul>\\n    <li>\\n      <span *ngIf=\\\"data.newmails === 'da'\\\">&#10003;</span> banana\\n    </li>\\n    <li>\\n      <span *ngIf=\\\"data.newmails === '324'\\\">&#10003;</span> da\\n    </li>\\n    <li>\\n      <span *ngIf=\\\"data.newmails === 'da'\\\">&#10003;</span> harta\\n    </li>\\n  </ul> -->\\n  <mat-form-field class=\\\"field\\\">\\n        <!-- <input matInput [(ngModel)]=\\\"data.mails\\\"> -->\\n        <textarea matInput placeholder=\\\"Type:\\\" [(ngModel)]=\\\"data.value\\\">{{data.value}}</textarea>\\n        <!-- <mat-hint align=\\\"start\\\"><strong>Don't disclose personal info</strong> </mat-hint> -->\\n  </mat-form-field>\\n</div>\\n<div mat-dialog-actions class=\\\"bot\\\">\\n    <!-- <button mat-button (click)=\\\"onNoClick()\\\">nvm</button> -->\\n    <button mat-button mat-dialog-close>back</button>\\n    <span class=\\\"example-spacer\\\"></span>\\n    <button mat-button [mat-dialog-close]=\\\"data\\\">Ok</button>\\n</div>\"","import { Component,Inject } from '@angular/core';\nimport {MatDialog,MAT_DIALOG_DATA,MatDialogRef} from '@angular/material';\n\nexport interface DialogData {\n  setting: string;\n  value: string;\n  index:number;\n}\n\n@Component({\n  selector: 'app-settingdialog',\n  templateUrl: './settingdialog.component.html',\n  styleUrls: ['./settingdialog.component.css']\n})\nexport class SettingdialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<SettingdialogComponent>,@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient  } from '@angular/common/http';\n// import * as config from './config.json';\n\nconst host = ''\n// const dada:any = (<any>config);\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SettingsService \n{\n  constructor(private http:HttpClient) { }\n  \n  getSettings()\n  {\n    return this.http.get(host+'/api/getsettings');\n  }\n  postsettings(data)\n  {\n    return this.http.post(host+'/api/postsettings',data);\n  }\n\n  resetSettings()\n  {\n    return this.http.get(host+'/api/initsettings');\n  }\n}\n","module.exports = \".all\\r\\n{\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\ntable {\\r\\n    /* position: relative; */\\r\\n    width: 100%;\\r\\n    /* left: 10%; */\\r\\n  }\\r\\n\\r\\n.centered {\\r\\n    position: relative;\\r\\n    width: 80%;\\r\\n    left: 10%;\\r\\n  }\\r\\n\\r\\n.title\\r\\n{\\r\\n    position: relative;\\r\\n    /* color: darkgreen; */\\r\\n    font-size: 2em;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.valuetd\\r\\n{\\r\\n    width: 80%;\\r\\n    max-width: 20em;\\r\\n    white-space: normal;\\r\\n    word-break: break-all;\\r\\n}\\r\\n\\r\\n.valuetd:hover\\r\\n{\\r\\n    cursor: pointer;\\r\\n    background-color: #3f51b5;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.middle\\r\\n{\\r\\n    text-align: center; \\r\\n}\\r\\n\\r\\n.mid\\r\\n{\\r\\n    position: fixed;\\r\\n    z-index: 999;\\r\\n    height: 2em;\\r\\n    width: 2em;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n}\\r\\n\\r\\n.refreshbtn:hover\\r\\n{\\r\\n    color: lightblue;\\r\\n}\\r\\n\\r\\n.text-danger\\r\\n{\\r\\n    color:red;\\r\\n    font-weight: bold;\\r\\n}\"","module.exports = \"\\n\\n<!-- [@slideInOut] -->\\n<!-- <div class=\\\"all\\\"> -->\\n  <p class=\\\"title\\\"  *ngIf=\\\"animation\\\"> Settings list: </p>\\n  <div class=\\\"mat-elevation-z8 centered\\\"  *ngIf=\\\"animation\\\" >\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\n      <ng-container matColumnDef=\\\"name\\\">\\n          <th mat-header-cell *matHeaderCellDef> Setting </th>\\n          <td mat-cell *matCellDef=\\\"let setting\\\"> {{setting.name}} </td>\\n      </ng-container>\\n        \\n      <ng-container matColumnDef=\\\"value\\\">\\n        <th mat-header-cell *matHeaderCellDef> Value </th>\\n        <td mat-cell *matCellDef=\\\"let setting; let i=index\\\" class=\\\"valuetd\\\" (click)=\\\"openDialog(setting.name,setting.value,i)\\\"> {{setting.value}} </td>\\n      </ng-container>\\n    \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns; let i = index; let setting\\\"></tr>\\n    </table>\\n    <mat-paginator [pageSizeOptions]=\\\"[3, 5, 10]\\\" showFirstLastButtons></mat-paginator>\\n    <button mat-icon-button style=\\\"position: absolute; bottom:10px; left:10px;\\\" color=\\\"primary\\\"><mat-icon (click)=\\\"updateTable()\\\" title=\\\"refresh\\\" class=\\\"refreshbtn\\\">refresh</mat-icon></button>\\n    <button mat-icon-button style=\\\"position: absolute; bottom:10px; left:50px;\\\" color=\\\"primary\\\"><mat-icon (click)=\\\"resetSettings()\\\" title=\\\"reset settings\\\" class=\\\"refreshbtn\\\">build</mat-icon></button>\\n  </div>\\n  <p class=\\\"text-danger middle\\\" *ngIf=\\\"errormsg\\\">{{errormsg}}</p>\\n<!-- </div> -->\\n\\n<mat-spinner class=\\\"mid\\\" color=\\\"warn\\\" *ngIf=\\\"loading\\\"></mat-spinner>\"","import { Component, OnInit,ViewChild } from '@angular/core';\nimport {MatDialog,MAT_DIALOG_DATA,MatDialogRef,MatPaginator,MatTableDataSource} from '@angular/material';\nimport { SettingdialogComponent } from '../settingdialog/settingdialog.component';\nimport { SettingsService } from '../settings.service';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\nexport interface Setting {\n  id: number,\n  name: string;\n  value: string;\n}\n\nlet SETTING_DATA: Setting[] = [\n  {id:0,name: 'ip', value: \"34.324324.324324.324:3245\"},\n  {id:1,name: 'peak', value: \"90%\"},\n  {id:2,name: 'logs', value: \"/var/log/da.log\"},\n  {id:3,name: 'json',value:`[\n    {\n      \"plates\": [\n        980202164,\n        \"anything\",\n        \"from\",\n        \"nodded\",\n        \"them\",\n        930041708.5745473\n      ],\n      \"cold\": -1490343731.0349832,\n      \"generally\": 759206740.9525161,\n      \"cent\": -1910939618,\n      \"any\": -1889045821.1710515,\n      \"acres\": true\n    },\n    true,\n    \"audience\",\n    true,\n    \"element\",\n    false\n  ]`}\n];\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css'],\n  animations: [\n    trigger('slideInOut', [\n      transition(':enter', [\n        style({transform: 'translateX(-100%)'}),\n        animate('500ms ease-in', style({transform: 'translateX(0%)'}))\n      ]),\n      transition(':leave', [\n      animate('500ms ease-in', style({transform: 'translateX(0%)'}))\n      ])\n    ])\n  ]\n})\nexport class SettingsComponent implements OnInit \n{\n  displayedColumns: string[] = ['name', 'value'];\n   dataSource;\n  settingdata:string;\n\n  loading:boolean = false;\n  first:boolean = true;\n\n  animation = false;\n\n  errormsg:string = \"\";\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public dialog: MatDialog,private settingsapi:SettingsService) { }\n\n  ngOnInit() \n  {\n    console.log(\"settings component init\");\n    this.animation = true;\n\n    // this.dataSource = new MatTableDataSource<Setting>(SETTING_DATA);\n    // setTimeout(() => this.dataSource.paginator = this.paginator);\n\n    // this.dataSource.paginator = this.paginator;\n    this.updateTable();\n    this.first=false;\n  }\n\n  updateTable()\n  {\n    if(!this.first)\n    this.loading = true;\n\n    this.settingsapi.getSettings().subscribe((data:any) =>\n    {\n\n      SETTING_DATA = data;\n      SETTING_DATA.sort(function(a, b) {\n        return a.id - b.id;\n      });\n      this.dataSource = new MatTableDataSource<Setting>(SETTING_DATA);\n      this.dataSource.paginator = this.paginator;\n      this.errormsg= \"\";\n      console.log(\"got new settings data\");\n      setTimeout(function() {this.loading=false;}.bind(this), 500);\n    },\n    (err) => {console.log(\"Error contacting settings service, server down? details: \"+JSON.stringify(err));\n    this.errormsg=\"Error getting data from database, try again soon.\"\n    this.loading=false;});\n  }\n\n\n  openDialog(setting,value,index): void \n  {\n    console.log(\"wawawaw \"+index);\n    const dialogRef = this.dialog.open(SettingdialogComponent, \n    {\n      width: '450px',\n      data: {setting: setting,value:value,index:index}\n    });\n\n    dialogRef.afterClosed().subscribe(result => \n    {\n      console.log(result);\n      if(result)\n      {\n        SETTING_DATA[result.index].value = result.value;\n        this.updateSettings(SETTING_DATA);\n      }\n    });\n  }\n\n  updateSettings(data)\n  {\n    this.settingsapi.postsettings(data).subscribe((res:any) =>\n    {\n        if(res.hack)\n        { \n          console.log(\"nice cheater\");\n          this.errormsg=\"Nice try, but it won't work\";\n        }\n        else if(res.status)\n        {\n          // this.updateTable();\n          console.log(\"succesful settings update!\");\n        }\n        else\n        {\n          console.log(\"failed settings update.\");\n          this.errormsg=\"Error getting data from database, try again soon.\"\n        }\n    });\n  }\n\n  resetSettings()\n  {\n    this.settingsapi.resetSettings().subscribe((res:any) =>\n    {\n        if(res.hack)\n        {\n          console.log(\"nice cheater\");\n          this.errormsg=\"Nice try, but it won't work\";\n        }\n        else if(res.status)\n        {\n          this.updateTable();\n          console.log(\"succesful settings reset!\");\n        }\n        else\n        {\n          console.log(\"failed settings reset.\");\n          this.errormsg=\"Error getting data from database, try again soon.\"\n        }\n    });\n  }\n}\n","module.exports = \"/* div\\r\\n{\\r\\n    right: 50%;\\r\\n} */\\r\\n\\r\\ntable\\r\\n{\\r\\n    position: absolute;\\r\\n    right: 50%;\\r\\n}\\r\\n\\r\\n.da\\r\\n{\\r\\n    position: absolute;\\r\\n    width: 50%;\\r\\n    left: 25%;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.example-margin {\\r\\n    margin: 0 10px;\\r\\n  }\\r\\n\\r\\n.mid\\r\\n{\\r\\n    /* position: fixed;\\r\\n    left: 25%;\\r\\n    top: 50%;\\r\\n    background-color: red;\\r\\n    width: 25%;\\r\\n    height: 25%; */\\r\\n    position: fixed;\\r\\n    z-index: 999;\\r\\n    height: 2em;\\r\\n    width: 2em;\\r\\n    overflow: visible;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n    /* transform: translate(-50%,-50%); */\\r\\n}\\r\\n\\r\\n.example-viewport {\\r\\n    height: 200px;\\r\\n    width: 200px;\\r\\n    border: 1px solid black;\\r\\n  }\\r\\n\\r\\n.example-item {\\r\\n    height: 50px;\\r\\n  }\"","module.exports = \"<p>\\n  testingarea works!\\n</p>\\n\\n<!-- <button (click)=\\\"changeState()\\\">Change Size</button>\\n<div [@EnterLeave]=currentState>da</div> -->\\n\\n\\n<!-- <h3>Enter and Leave animation</h3>\\n<button (click)=\\\"addItem()\\\">Add List</button>\\n<button (click)=\\\"removeItem()\\\">Remove List</button>\\n<div style=\\\"width:200px; margin-left: 20px\\\">\\n  <ul>\\n    <li *ngFor=\\\"let list of listItem\\\" [@EnterLeave]=\\\"'flyIn'\\\">\\n      {{list}}\\n    </li>\\n  </ul>\\n</div> -->\\n\\n<!-- <div [@EnterLeave]=\\\"test\\\">\\n  dadada\\n</div> -->\\n\\n<!-- <table [@EnterLeave]=\\\"'flyIn'\\\">\\n<tr>\\n  <td>hey</td>\\n</tr>\\n</table> -->\\n<button (click)=\\\"changeState()\\\">Change Size</button>\\n<br>\\n<br>\\n<br>\\n<!-- [@slideInOut] -->\\n<div class=\\\"mat-elevation-z8 centered da\\\" *ngIf=\\\"visible\\\" >\\nmeme\\n</div>\\n\\n<!-- <mat-progress-spinner\\nclass=\\\"example-margin\\\"\\n[color]=\\\"color\\\"\\n[mode]=\\\"mode\\\"\\n[value]=\\\"value\\\">\\n</mat-progress-spinner> -->\\n\\n<mat-spinner class=\\\"mid\\\" color=\\\"warn\\\"></mat-spinner>\\n\\n<cdk-virtual-scroll-viewport itemSize=\\\"50\\\" class=\\\"example-viewport\\\">\\n  <div *cdkVirtualFor=\\\"let item of items\\\" class=\\\"example-item\\\">{{item}}</div>\\n</cdk-virtual-scroll-viewport>\"","import { Component, OnInit } from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n\n// animations: [\n//   trigger('EnterLeave', [\n//     state('flyIn', style({ transform: 'translateX(0)' })),\n//     transition(':enter', [\n//       style({ transform: 'translateX(-6000%)' }),\n//       animate('0.5s 300ms ease-in')\n//     ]),\n//     transition(':leave', [\n//       animate('0.3s ease-out', style({ transform: 'translateX(100%)' }))\n//     ])\n//   ])\n// ]\n\n\n\n@Component({\n  selector: 'app-testingarea',\n  templateUrl: './testingarea.component.html',\n  styleUrls: ['./testingarea.component.css'],\n  animations: [\n    trigger('slideInOut', [\n      transition(':enter', [\n        style({transform: 'translateX(-100%)'}),\n        animate('200ms ease-in', style({transform: 'translateX(0%)'}))\n      ]),\n      transition(':leave', [\n      animate('200ms ease-in', style({transform: 'translateX(0%)'}))\n      ])\n    ])\n  ]\n})\nexport class TestingareaComponent implements OnInit {\n\n  constructor() \n  { \n    \n  }\n\n  items = Array.from({length: 100}).map((_, i) => `Item #${i}`);\n\n  test;\n\n  visible = false;\n  currentState = 'initial';\n\n  color = 'primary';\n  mode = 'determinate';\n  value = 50;\n\n  ngOnInit() \n  {\n    this.visible = true;\n    //this.currentState = this.currentState === 'initial' ? 'final' : 'initial';\n   // this.visible = true;\n    console.log(\"hey\"); \n  }\n\n\n\n  \nlistItem = [];\nlist_order: number = 1;\naddItem() {\n  var listitem = \"ListItem \" + this.list_order;\n  this.list_order++;\n  this.listItem.push(listitem);\n}\nremoveItem() {\n  this.listItem.length -= 1;\n}\n\n\n // currentState = 'initial';\nchangeState() {\n  \n  //this.currentState = this.currentState === 'initial' ? 'final' : 'initial';\n  //this.test = this.test === 'flyIn';\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}